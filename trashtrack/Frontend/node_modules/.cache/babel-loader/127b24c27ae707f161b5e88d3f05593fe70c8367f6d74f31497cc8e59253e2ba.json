{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Pictures\\\\Screenshots\\\\TMS\\\\TMS\\\\trashtrack\\\\Frontend\\\\src\\\\components\\\\EmissionCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport planet from './planet.svg';\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GWP_CH4 = 28; // Methane (CH4) global warming potential\nconst GWP_N2O = 265; // Nitrous oxide (N2O) global warming potential\nconst GWP_C02 = 1; // CO2 emission factor (hypothetical value, adjust as needed)\n\n// React component\nconst EmissionsCalculator = () => {\n  _s();\n  const [wasteMass, setWasteMass] = useState(0);\n  const [emissions, setEmissions] = useState(null);\n  const [co2Content, setCO2Content] = useState(null);\n  const calculateEmissions = value => {\n    const wasteMassFloat = parseFloat(value);\n    if (!isNaN(wasteMassFloat)) {\n      // Calculate CH4 and N2O emissions\n      const CH4Emissions = wasteMassFloat * 0.18;\n      const N2OEmissions = wasteMassFloat * 0.0001;\n\n      // Convert CH4 and N2O emissions to CO2e\n      const CH4CO2e = CH4Emissions * GWP_CH4;\n      const N2OCO2e = N2OEmissions * GWP_N2O;\n\n      // Sum emissions from CH4 and N2O\n      const totalEmissions = CH4CO2e + N2OCO2e;\n\n      // Calculate CO2 content\n      const CO2Emissions = wasteMassFloat * GWP_C02 * 0.82;\n      setEmissions(totalEmissions.toFixed(2));\n      setCO2Content(CO2Emissions.toFixed(2));\n    } else {\n      setEmissions(null);\n      setCO2Content(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3\",\n      style: {\n        border: '1px solid #ccc',\n        padding: '20px',\n        borderRadius: '8px',\n        maxWidth: '400px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter the mass of waste generated (in kgs):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"px-4 rounded-md py-2\",\n          type: \"number\",\n          value: wasteMass,\n          onChange: e => {\n            setWasteMass(e.target.value);\n            calculateEmissions(e.target.value);\n          },\n          style: {\n            width: '100%',\n            margin: '8px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), emissions !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [\"Total equivalent greenhouse gas emissions from \", wasteMass, \" kg of organic waste: \", emissions, \" kg CO2e\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), co2Content !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [\"CO2 content from \", wasteMass, \" kg of organic waste: \", co2Content, \" kg CO2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"SAVE THE PLANET!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: planet,\n          alt: \"Planet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(EmissionsCalculator, \"AV/thD03EFIga/YznjfknRV9T+A=\");\n_c = EmissionsCalculator;\nexport default EmissionsCalculator;\nvar _c;\n$RefreshReg$(_c, \"EmissionsCalculator\");","map":{"version":3,"names":["React","useState","planet","jsxDEV","_jsxDEV","GWP_CH4","GWP_N2O","GWP_C02","EmissionsCalculator","_s","wasteMass","setWasteMass","emissions","setEmissions","co2Content","setCO2Content","calculateEmissions","value","wasteMassFloat","parseFloat","isNaN","CH4Emissions","N2OEmissions","CH4CO2e","N2OCO2e","totalEmissions","CO2Emissions","toFixed","style","display","justifyContent","alignItems","height","children","className","border","padding","borderRadius","maxWidth","width","type","onChange","e","target","margin","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Pictures/Screenshots/TMS/TMS/trashtrack/Frontend/src/components/EmissionCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport planet from './planet.svg';\r\n// Constants\r\nconst GWP_CH4 = 28; // Methane (CH4) global warming potential\r\nconst GWP_N2O = 265; // Nitrous oxide (N2O) global warming potential\r\nconst GWP_C02 = 1; // CO2 emission factor (hypothetical value, adjust as needed)\r\n\r\n// React component\r\nconst EmissionsCalculator = () => {\r\n  const [wasteMass, setWasteMass] = useState(0);\r\n  const [emissions, setEmissions] = useState(null);\r\n  const [co2Content, setCO2Content] = useState(null);\r\n\r\n  const calculateEmissions = (value) => {\r\n    const wasteMassFloat = parseFloat(value);\r\n    if (!isNaN(wasteMassFloat)) {\r\n      // Calculate CH4 and N2O emissions\r\n      const CH4Emissions = wasteMassFloat * 0.18;\r\n      const N2OEmissions = wasteMassFloat * 0.0001;\r\n\r\n      // Convert CH4 and N2O emissions to CO2e\r\n      const CH4CO2e = CH4Emissions * GWP_CH4;\r\n      const N2OCO2e = N2OEmissions * GWP_N2O;\r\n\r\n      // Sum emissions from CH4 and N2O\r\n      const totalEmissions = CH4CO2e + N2OCO2e;\r\n\r\n      // Calculate CO2 content\r\n      const CO2Emissions = wasteMassFloat * GWP_C02 * 0.82;\r\n\r\n      setEmissions(totalEmissions.toFixed(2));\r\n      setCO2Content(CO2Emissions.toFixed(2));\r\n    } else {\r\n      setEmissions(null);\r\n      setCO2Content(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n      <div className=\"p-3\" style={{ border: '1px solid #ccc', padding: '20px', borderRadius: '8px', maxWidth: '400px', width: '100%' }}>\r\n        <label>\r\n          Enter the mass of waste generated (in kgs):\r\n          <input\r\n            className='px-4 rounded-md py-2'\r\n            type=\"number\"\r\n            value={wasteMass}\r\n            onChange={(e) => {\r\n              setWasteMass(e.target.value);\r\n              calculateEmissions(e.target.value);\r\n            }}\r\n            style={{ width: '100%', margin: '8px 0' }}\r\n          />\r\n        </label>\r\n\r\n        {emissions !== null && (\r\n          <p style={{ marginTop: '10px' }}>\r\n            Total equivalent greenhouse gas emissions from {wasteMass} kg of organic waste: {emissions} kg CO2e\r\n          </p>\r\n        )}\r\n\r\n        {co2Content !== null && (\r\n          <p style={{ marginTop: '10px' }}>\r\n            CO2 content from {wasteMass} kg of organic waste: {co2Content} kg CO2\r\n          </p>\r\n        )}\r\n\r\n        <div>\r\n          SAVE THE PLANET!\r\n        </div>\r\n\r\n        <div>\r\n          <img src={planet} alt=\"Planet\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmissionsCalculator;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}