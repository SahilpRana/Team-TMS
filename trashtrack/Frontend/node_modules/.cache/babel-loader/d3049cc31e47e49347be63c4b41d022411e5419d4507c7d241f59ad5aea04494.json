{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Pictures\\\\Screenshots\\\\TMS\\\\TMS\\\\trashtrack\\\\Frontend\\\\src\\\\components\\\\EmissionCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GWP_CH4 = 28; // Methane (CH4) global warming potential\nconst GWP_N2O = 265; // Nitrous oxide (N2O) global warming potential\n\n// React component\nconst EmissionsCalculator = () => {\n  _s();\n  const [wasteMass, setWasteMass] = useState(0);\n  const [emissions, setEmissions] = useState(null);\n  const calculateEmissions = value => {\n    const wasteMassFloat = parseFloat(value);\n    if (!isNaN(wasteMassFloat)) {\n      // Calculate CH4 and N2O emissions\n      const CH4Emissions = wasteMassFloat * 0.18;\n      const N2OEmissions = wasteMassFloat * 0.0001;\n\n      // Convert CH4 and N2O emissions to CO2e\n      const CH4CO2e = CH4Emissions * GWP_CH4;\n      const N2OCO2e = N2OEmissions * GWP_N2O;\n\n      // Sum emissions from CH4 and N2O\n      const totalEmissions = CH4CO2e + N2OCO2e;\n      setEmissions(totalEmissions.toFixed(2));\n    } else {\n      setEmissions(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '20px',\n        borderRadius: '8px',\n        maxWidth: '400px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter the mass of waste generated (in kgs):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: wasteMass,\n          onChange: e => {\n            setWasteMass(e.target.value);\n            calculateEmissions(e.target.value);\n          },\n          style: {\n            width: '100%',\n            margin: '8px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), emissions !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [\"Total equivalent greenhouse gas emissions from \", wasteMass, \" kg of organic waste: \", emissions, \" kg CO2e\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(EmissionsCalculator, \"ngW+cW+mchFjaO6K8fNUIkGhSUI=\");\n_c = EmissionsCalculator;\nexport default EmissionsCalculator;\nvar _c;\n$RefreshReg$(_c, \"EmissionsCalculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GWP_CH4","GWP_N2O","EmissionsCalculator","_s","wasteMass","setWasteMass","emissions","setEmissions","calculateEmissions","value","wasteMassFloat","parseFloat","isNaN","CH4Emissions","N2OEmissions","CH4CO2e","N2OCO2e","totalEmissions","toFixed","style","display","justifyContent","alignItems","height","children","border","padding","borderRadius","maxWidth","width","type","onChange","e","target","margin","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Pictures/Screenshots/TMS/TMS/trashtrack/Frontend/src/components/EmissionCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Constants\r\nconst GWP_CH4 = 28; // Methane (CH4) global warming potential\r\nconst GWP_N2O = 265; // Nitrous oxide (N2O) global warming potential\r\n\r\n// React component\r\nconst EmissionsCalculator = () => {\r\n  const [wasteMass, setWasteMass] = useState(0);\r\n  const [emissions, setEmissions] = useState(null);\r\n\r\n  const calculateEmissions = (value) => {\r\n    const wasteMassFloat = parseFloat(value);\r\n    if (!isNaN(wasteMassFloat)) {\r\n      // Calculate CH4 and N2O emissions\r\n      const CH4Emissions = wasteMassFloat * 0.18;\r\n      const N2OEmissions = wasteMassFloat * 0.0001;\r\n\r\n      // Convert CH4 and N2O emissions to CO2e\r\n      const CH4CO2e = CH4Emissions * GWP_CH4;\r\n      const N2OCO2e = N2OEmissions * GWP_N2O;\r\n\r\n      // Sum emissions from CH4 and N2O\r\n      const totalEmissions = CH4CO2e + N2OCO2e;\r\n\r\n      setEmissions(totalEmissions.toFixed(2));\r\n    } else {\r\n      setEmissions(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n      <div style={{ border: '1px solid #ccc', padding: '20px', borderRadius: '8px', maxWidth: '400px', width: '100%' }}>\r\n        <label>\r\n          Enter the mass of waste generated (in kgs):\r\n          <input\r\n            type=\"number\"\r\n            value={wasteMass}\r\n            onChange={(e) => {\r\n              setWasteMass(e.target.value);\r\n              calculateEmissions(e.target.value);\r\n            }}\r\n            style={{ width: '100%', margin: '8px 0' }}\r\n          />\r\n        </label>\r\n\r\n        {emissions !== null && (\r\n          <p style={{ marginTop: '10px' }}>\r\n            Total equivalent greenhouse gas emissions from {wasteMass} kg of organic waste: {emissions} kg CO2e\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmissionsCalculator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,EAAE,CAAC,CAAC;AACpB,MAAMC,OAAO,GAAG,GAAG,CAAC,CAAC;;AAErB;AACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMW,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMC,cAAc,GAAGC,UAAU,CAACF,KAAK,CAAC;IACxC,IAAI,CAACG,KAAK,CAACF,cAAc,CAAC,EAAE;MAC1B;MACA,MAAMG,YAAY,GAAGH,cAAc,GAAG,IAAI;MAC1C,MAAMI,YAAY,GAAGJ,cAAc,GAAG,MAAM;;MAE5C;MACA,MAAMK,OAAO,GAAGF,YAAY,GAAGb,OAAO;MACtC,MAAMgB,OAAO,GAAGF,YAAY,GAAGb,OAAO;;MAEtC;MACA,MAAMgB,cAAc,GAAGF,OAAO,GAAGC,OAAO;MAExCT,YAAY,CAACU,cAAc,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,MAAM;MACLX,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAED,oBACER,OAAA;IAAKoB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC/FzB,OAAA;MAAKoB,KAAK,EAAE;QAAEM,MAAM,EAAE,gBAAgB;QAAEC,OAAO,EAAE,MAAM;QAAEC,YAAY,EAAE,KAAK;QAAEC,QAAQ,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAL,QAAA,gBAC/GzB,OAAA;QAAAyB,QAAA,GAAO,6CAEL,eAAAzB,OAAA;UACE+B,IAAI,EAAC,QAAQ;UACbrB,KAAK,EAAEL,SAAU;UACjB2B,QAAQ,EAAGC,CAAC,IAAK;YACf3B,YAAY,CAAC2B,CAAC,CAACC,MAAM,CAACxB,KAAK,CAAC;YAC5BD,kBAAkB,CAACwB,CAAC,CAACC,MAAM,CAACxB,KAAK,CAAC;UACpC,CAAE;UACFU,KAAK,EAAE;YAAEU,KAAK,EAAE,MAAM;YAAEK,MAAM,EAAE;UAAQ;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,EAEPhC,SAAS,KAAK,IAAI,iBACjBP,OAAA;QAAGoB,KAAK,EAAE;UAAEoB,SAAS,EAAE;QAAO,CAAE;QAAAf,QAAA,GAAC,iDACgB,EAACpB,SAAS,EAAC,wBAAsB,EAACE,SAAS,EAAC,UAC7F;MAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnC,EAAA,CAhDID,mBAAmB;AAAAsC,EAAA,GAAnBtC,mBAAmB;AAkDzB,eAAeA,mBAAmB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}