{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Pictures\\\\Screenshots\\\\TMS\\\\TMS\\\\trashtrack\\\\Frontend\\\\src\\\\components\\\\EditIconCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditIconCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // SVG code for the pencil icon\n    const svgCode = `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n        <path d=\"M2 18l6-6 6 6\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n      </svg>\n    `;\n\n    // Create an image element with the SVG code as the source\n    const img = new Image();\n    img.src = 'data:image/svg+xml,' + encodeURIComponent(svgCode);\n\n    // Draw the image on the canvas when it's loaded\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 100,\n    height: 100,\n    style: {\n      border: '1px solid #ddd'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n_s(EditIconCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = EditIconCanvas;\nexport default EditIconCanvas;\nvar _c;\n$RefreshReg$(_c, \"EditIconCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","EditIconCanvas","_s","canvasRef","canvas","current","ctx","getContext","svgCode","img","Image","src","encodeURIComponent","onload","drawImage","width","height","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Pictures/Screenshots/TMS/TMS/trashtrack/Frontend/src/components/EditIconCanvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nconst EditIconCanvas = () => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // SVG code for the pencil icon\r\n    const svgCode = `\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n        <path d=\"M2 18l6-6 6 6\"/>\r\n        <circle cx=\"12\" cy=\"12\" r=\"10\"/>\r\n      </svg>\r\n    `;\r\n\r\n    // Create an image element with the SVG code as the source\r\n    const img = new Image();\r\n    img.src = 'data:image/svg+xml,' + encodeURIComponent(svgCode);\r\n\r\n    // Draw the image on the canvas when it's loaded\r\n    img.onload = () => {\r\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n    };\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} width={100} height={100} style={{ border: '1px solid #ddd' }} />;\r\n};\r\n\r\nexport default EditIconCanvas;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd,MAAMM,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACA,MAAMC,OAAO,GAAI;AACrB;AACA;AACA;AACA;AACA,KAAK;;IAED;IACA,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAG,qBAAqB,GAAGC,kBAAkB,CAACJ,OAAO,CAAC;;IAE7D;IACAC,GAAG,CAACI,MAAM,GAAG,MAAM;MACjBP,GAAG,CAACQ,SAAS,CAACL,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEL,MAAM,CAACW,KAAK,EAAEX,MAAM,CAACY,MAAM,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOhB,OAAA;IAAQiB,GAAG,EAAEd,SAAU;IAACY,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE,GAAI;IAACE,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAiB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjG,CAAC;AAACrB,EAAA,CA1BID,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AA4BpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}