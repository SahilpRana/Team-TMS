{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Pictures\\\\Screenshots\\\\TMS\\\\TMS\\\\trashtrack\\\\Frontend\\\\src\\\\components\\\\EmissionCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GWP_CH4 = 28; // Methane (CH4) global warming potential\nconst GWP_N2O = 265; // Nitrous oxide (N2O) global warming potential\n\n// React component\nconst EmissionsCalculator = () => {\n  _s();\n  const [wasteMass, setWasteMass] = useState('');\n  const [emissions, setEmissions] = useState(null);\n  const calculateEmissions = () => {\n    const wasteMassFloat = parseFloat(wasteMass);\n    if (!isNaN(wasteMassFloat)) {\n      // Calculate CH4 and N2O emissions\n      const CH4Emissions = wasteMassFloat * 0.18;\n      const N2OEmissions = wasteMassFloat * 0.0001;\n\n      // Convert CH4 and N2O emissions to CO2e\n      const CH4CO2e = CH4Emissions * GWP_CH4;\n      const N2OCO2e = N2OEmissions * GWP_N2O;\n\n      // Sum emissions from CH4 and N2O\n      const totalEmissions = CH4CO2e + N2OCO2e;\n      setEmissions(totalEmissions.toFixed(2));\n    } else {\n      setEmissions(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter the mass of waste generated (in kgs):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: wasteMass,\n        onChange: e => setWasteMass(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateEmissions,\n      children: \"Calculate Emissions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), emissions !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total equivalent greenhouse gas emissions from \", wasteMass, \" kg of organic waste: \", emissions, \" kg CO2e\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(EmissionsCalculator, \"8JAxyvsJzMIh47yCCam5k52Rcfs=\");\n_c = EmissionsCalculator;\nexport default EmissionsCalculator;\nvar _c;\n$RefreshReg$(_c, \"EmissionsCalculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GWP_CH4","GWP_N2O","EmissionsCalculator","_s","wasteMass","setWasteMass","emissions","setEmissions","calculateEmissions","wasteMassFloat","parseFloat","isNaN","CH4Emissions","N2OEmissions","CH4CO2e","N2OCO2e","totalEmissions","toFixed","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Pictures/Screenshots/TMS/TMS/trashtrack/Frontend/src/components/EmissionCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Constants\r\nconst GWP_CH4 = 28;  // Methane (CH4) global warming potential\r\nconst GWP_N2O = 265;  // Nitrous oxide (N2O) global warming potential\r\n\r\n// React component\r\nconst EmissionsCalculator = () => {\r\n  const [wasteMass, setWasteMass] = useState('');\r\n  const [emissions, setEmissions] = useState(null);\r\n\r\n  const calculateEmissions = () => {\r\n    const wasteMassFloat = parseFloat(wasteMass);\r\n    if (!isNaN(wasteMassFloat)) {\r\n      // Calculate CH4 and N2O emissions\r\n      const CH4Emissions = wasteMassFloat * 0.18;\r\n      const N2OEmissions = wasteMassFloat * 0.0001;\r\n\r\n      // Convert CH4 and N2O emissions to CO2e\r\n      const CH4CO2e = CH4Emissions * GWP_CH4;\r\n      const N2OCO2e = N2OEmissions * GWP_N2O;\r\n\r\n      // Sum emissions from CH4 and N2O\r\n      const totalEmissions = CH4CO2e + N2OCO2e;\r\n\r\n      setEmissions(totalEmissions.toFixed(2));\r\n    } else {\r\n      setEmissions(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        Enter the mass of waste generated (in kgs):\r\n        <input type=\"number\" value={wasteMass} onChange={(e) => setWasteMass(e.target.value)} />\r\n      </label>\r\n      <button onClick={calculateEmissions}>Calculate Emissions</button>\r\n\r\n      {emissions !== null && (\r\n        <p>Total equivalent greenhouse gas emissions from {wasteMass} kg of organic waste: {emissions} kg CO2e</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmissionsCalculator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,EAAE,CAAC,CAAE;AACrB,MAAMC,OAAO,GAAG,GAAG,CAAC,CAAE;;AAEtB;AACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMW,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,cAAc,GAAGC,UAAU,CAACN,SAAS,CAAC;IAC5C,IAAI,CAACO,KAAK,CAACF,cAAc,CAAC,EAAE;MAC1B;MACA,MAAMG,YAAY,GAAGH,cAAc,GAAG,IAAI;MAC1C,MAAMI,YAAY,GAAGJ,cAAc,GAAG,MAAM;;MAE5C;MACA,MAAMK,OAAO,GAAGF,YAAY,GAAGZ,OAAO;MACtC,MAAMe,OAAO,GAAGF,YAAY,GAAGZ,OAAO;;MAEtC;MACA,MAAMe,cAAc,GAAGF,OAAO,GAAGC,OAAO;MAExCR,YAAY,CAACS,cAAc,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,MAAM;MACLV,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAED,oBACER,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,GAAO,6CAEL,eAAAnB,OAAA;QAAOoB,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAEhB,SAAU;QAACiB,QAAQ,EAAGC,CAAC,IAAKjB,YAAY,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,eACR5B,OAAA;MAAQ6B,OAAO,EAAEpB,kBAAmB;MAAAU,QAAA,EAAC;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEhErB,SAAS,KAAK,IAAI,iBACjBP,OAAA;MAAAmB,QAAA,GAAG,iDAA+C,EAACd,SAAS,EAAC,wBAAsB,EAACE,SAAS,EAAC,UAAQ;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1G;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CArCID,mBAAmB;AAAA2B,EAAA,GAAnB3B,mBAAmB;AAuCzB,eAAeA,mBAAmB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}